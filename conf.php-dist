<?
$importance_levels=array("international"=>0, "national"=>0, "region"=>7, "urban"=>12, "suburban"=>13, "local"=>13);
$route_levels=array("train", "rail", "railway", "subway", "light_rail", "ferry", "tram", "trolley", "bus", "minibus");
$route_types=array("train"=>"Train", "rail"=>"Railway", "railway"=>"Railway", "subway"=>"Subway", "light_rail"=>"Light Rail", "ferry"=>"Ferry", "tram"=>"Tram", "trolley"=>"Trolley", "bus"=>"Bus", "minibus"=>"Minibus");

// Local read only database
$db['name']="gis";
$db['user']="www";
$db['passwd']="PASSWORD";
$db['host']="localhost";
$db['debug']=false;

// Central writeable database
$db_central['name']="gis";
$db_central['user']="www";
$db_central['passwd']="PASSWORD";
$db_central['host']="localhost";
$db_central['debug']=false;

$SRID=900913;

$type_list=array("w"=>"way", "n"=>"node", "r"=>"relation");
$type_list_short=array("w"=>"way", "n"=>"node", "r"=>"rel");
$type_list_plural=array("w"=>"ways", "n"=>"nodes", "r"=>"rels");

$wiki_stylesheet="http://wiki.openstreetmap.org/index.php?title=OpenStreetBrowser/Stylesheet&action=raw";
$wiki_img="http://wiki.openstreetmap.org/wiki/Image:";
$wiki_imgsrc="http://wiki.openstreetmap.org";
$symbol_path="/home/osm/render/symbols";
$style_path="/home/osm/render";
$overlays=array("culture"=>"overlay_culture", "gastro"=>"overlay_food", "services"=>"overlay_services");

// If you want to use the Cloudmade API (e.g. for tiles or navigation) provide
// a valid API key here
//$key_cloudmade_api="";

// $root_path - where is all stuff
$root_path="/home/osm";

// $lists_dir - saves available categories (has to be writeable for www)
$lists_dir="$root_path/data/lists";

// $fifo_path - the pipe to the mcp-process
$fifo_path="/tmp/mcp.fifo";

// $default_user_tags - the default tags for new users
$default_user_tags=array();

// $default_anon_tags - the default tags for anonymous 
$default_anon_tags=array();

// $data_dir - The root of all web server writeable data
$data_dir="$root_path/data/";

// $renderd_files - Define additional styles for renderd (point to a renderd-file)
$renderd_files=array(
);

// $default_categories - Define a list of categories which should automatically be loaded
$default_categories=array();

// List of plugins which should be loaded
$plugins=array("measure", "favorites", "wikipedia");

// Which basemaps should be loaded
//   'mapnik', 'osmarender' and 'cyclemap' are predefined values
$basemaps=array(
  "osb"=>array("http://www.openstreetbrowser.org/tiles/base/", array("numZoomLevels"=>19)),
  "mapnik"=>"mapnik",
);

// Available plugins:
// measure - do some measurement on the map
// favorites - set favorites on the map
// marker - set markers on the map
// marker_list - Show list of visible markers as category
// wikipedia - write some information of objects where we know about wikipedia
// navigation - navigation on the map
// layer_chooser - show possible base maps and general overlays in options
// toolbox - provide a toolbox interface (for other plugins)
// toolbox_slide - slide the toolbox when opening/closeing/changing
// search - add a search field to the toolbox, use the nominatim service
// start_location - toolbox that let users change viewport
// help - adds a entry for help to the toolbox
// tab - tabbed windows
// navigation_cloudmade - an interface to the cloudmade routing service
// no_basemap - An empty basemap as background map
// db - Plugins can define db-stuff using migrations
// state_info - Info about state of database
// hill - Hill Shading on base of NASA SRTM
// contour - Contour Shading (DE/AT/CH only)
// overlays - Additional overlays
// cloudmade_basemap - Add the default cloudmade basemap
// tags_info - Change display of tags in info
// info_navigation - Navigate to currently shown info
// whats_here - Query OSM objects under cursor
// cascadenik - Automatically compile cascadenik-files in plugins
// geo_relate - Calculate relations between geometric objects
// mapnik_rotate - In a mapnik style rotate icons
// cascadenik_svg - As cascadenik can't handle svg, convert all image-files to png first
// mapnik_colorsvg - In a mapnik style replace 'color_FROM_TO'
// basemap - A nice colorful basemap
// cascadenik_include - Include inc_mml-files to mml-files
// classify_hmatch - Match objects using a ruleset (woot! there's docu in man.txt)
// cache_memcache - A cache using the memcached
// cluster_call - Send events through the database to db-clients
